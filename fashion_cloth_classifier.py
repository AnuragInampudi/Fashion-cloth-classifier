# -*- coding: utf-8 -*-
"""Fashion_cloth_classifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aFHu80XRQ9IdbbALX9Z5X92xMO4uANbH
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import keras
from keras.models import Sequential
from keras.layers import Flatten, Dense
import matplotlib.pyplot as plt
# %matplotlib inline

from keras.datasets import fashion_mnist
(x_train, x_lab),(y_test, y_lab) = fashion_mnist.load_data()
plt.imshow(x_train[1])
plt.title('Class: {}'.format(x_lab[1]))
plt.figure()

x_train = keras.utils.normalize(x_train, axis = 1)
y_test = keras.utils.normalize(y_test, axis = 1)
plt.imshow(x_train[0])
plt.title('Class: {}'.format(x_lab[0]))
plt.figure()

x_train = keras.utils.normalize(x_train, axis = 1)
y_test = keras.utils.normalize(y_test, axis = 1)
plt.imshow(x_train[0])
plt.title('Class: {}'.format(x_lab[0]))
plt.figure()

model = Sequential()
model.add(Flatten(input_shape=((28,28))))
model.add(Dense(200, activation="relu"))
model.add(Dense(10, activation="softmax"))

# Compiling the Model
model.compile(optimizer = "adam", loss="sparse_categorical_crossentropy", metrics = ["accuracy"])

# Fitting the Model
model.fit(x_train, x_lab, epochs = 20)

model.evaluate(y_test, y_lab)
p = model.predict(y_test[:10])
print(p)

pred = np.argmax(p, axis=1)
print(pred)
print(y_lab[:10])

for i in range(10):
  plt.imshow(y_test[i], cmap="binary")
  plt.title('Original: {}, Predicted: {}'.format(y_lab[i], pred[i]))
  plt.axis("Off")
  plt.figure()